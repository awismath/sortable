# Sortable Coding Challenge# Alice Wismath# April 2016import jsonclass Product (object):	'''Represents a product object'''		def __init__(self, product_name, manufac, model, date, family=None):		self.name = product_name		self.manufac = manufac		self.family = family		self.model = model		self.date = date		self.listings = []class MatchDB (object):	''' Create a database of products and their listings. Stored as a dictionary.		Keyed on product_name '''			def __init__(self):		self.products = {}		self.matches = 0			def read_products(self, file_name):		'''Read in products from product file and add to the product database dictionary'''		num_products = 0		file = open(file_name, 'r')		for line in file:			try:				data = json.loads(line)			except Exception:				print("ERROR: this line is not valid JSON- skipping")				continue			product_name = data["product_name"]			manufac = data["manufacturer"]			model = data["model"]			date = data["announced-date"]			family = data.get("family")			prod = Product(product_name, manufac, model, date, family)			self.products[product_name] = prod			num_products = num_products + 1		print("Finished reading in " + str(num_products) + " products")	def process_listing(self, data):		'''Process a listing object in JSON format and look for a matching product '''				title = data["title"].lower()		manufac = data["manufacturer"].lower()		currency = data["currency"]		price = data["price"]				# Loop through products looking for a match		for key,val in self.products.items():			# change product name to lower case, replace dashes with spaces,			# and add a space on the end to avoid matching with longer names that contain this one			prod_name = val.name.lower()			prod_name = prod_name.replace('-',' ')			prod_name = prod_name + " "			if prod_name in title:				val.listings.append(data)				self.matches = self.matches + 1				return			# Didn't find a matching product		return					def print_to_file(self, file_name):		''' Loop through the database and print a result object to the result file 			in JSON lines formatfor each product that has  at least one listing. '''		file = open(file_name, "w")		for key,val in self.products.items():			if len(val.listings) == 0:				continue			line = '{"product_name": "' + val.name + '", "listings": ' + json.dumps(val.listings) + '}\n'			file.write(line)		file.close()				def solution():	''' Execute the Sortable challenge by performing the following steps:			- Read in product file and create product database	 		- Read in listings one by one:				- Search database for matching product				- If product found, add to product's listings and move on to next listing	 		- Loop through products and print name and listings to result file '''		# Create database and read in products	prod_db = MatchDB()	print(" ")	prod_db.read_products("products.txt")		# Read and process listings	list_file = open('listings.txt', 'r')	num_listings = 0	for line in list_file:		try:			data = json.loads(line)		except Exception:			print("ERROR: this line is not valid JSON -skipping")			continue		prod_db.process_listing(data)		num_listings = num_listings + 1	list_file.close()	print("Read and processed " + str(num_listings) + " listings")	print("Found " + str(prod_db.matches)  + " matches")		# Print results to file	prod_db.print_to_file("results.txt")	print("Program finished. Results are in results.txt")	print(" ")	if __name__ == '__main__':	solution()